<!doctype html>
<link rel="stylesheet" href="style.css">
<head>
    <title>{%if by_hotel_html %}{{ name }}{% else %}{{ gather_date }}{% endif %}</title>
    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/2.3.1/css/dataTables.dataTables.min.css">
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <!-- DataTables JS -->
    <script src="https://cdn.datatables.net/2.3.1/js/dataTables.js"></script>
    <!-- DataTables ColVis extension for column hiding -->
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.4.1/css/buttons.dataTables.min.css">
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.colVis.min.js"></script>
</head>
<body>
    <label for="min-date">Start:</label>
    <input type="date" id="min-date">
    <label for="max-date" style="margin-left:10px;">End:</label>
    <input type="date" id="max-date">
    {{ table_html }}
    <script>
    $(document).ready(function() {
        var table = $('#T_hotel-info').DataTable({
            dom: 'lBrtip',
            buttons: [
                {
                    extend: 'colvis',
    {%if not by_hotel_html %}
                    text: 'Hotels',
                    postfixButtons: [
                        {
                            text: 'Select All',
                            action: function ( e, dt, node, config ) {
                                dt.columns().visible(true, false);
                            }
                        },
                        {
                            text: 'Deselect All',
                            action: function ( e, dt, node, config ) {
                                // Keep the first two columns (date and day) visible, hide the rest
                                dt.columns().every(function(idx) {
                                    if(idx > 1) { // Start hiding from the third column (index 2)
                                        this.visible(false, false);
                                    } else {
                                        this.visible(true, false);
                                    }
                                });
                            }
                        }
                    ]
    {% else %}
                    text: 'Gather Dates',
                    columns: 'nothing',
                    postfixButtons: [
                    {
                            text: 'Last 7 Days',
                            action: function ( e, dt, node, config ) {
                                dt.columns().every(function(idx) {
                                    if(idx > 7) {
                                        this.visible(false, false);
                                    } else {
                                        this.visible(true, false);
                                    }
                                });
                            }
                        },
                        {
                            text: 'Last 15 Days',
                            action: function ( e, dt, node, config ) {
                                dt.columns().every(function(idx) {
                                    if(idx > 15) {
                                        this.visible(false, false);
                                    } else {
                                        this.visible(true, false);
                                    }
                                });
                            }
                        },
                        {
                            text: 'Last 30 Days',
                            action: function ( e, dt, node, config ) {
                                dt.columns().every(function(idx) {
                                    if(idx > 30) {
                                        this.visible(false, false);
                                    } else {
                                        this.visible(true, false);
                                    }
                                });
                            }
                        },
                        {
                            text: 'All Dates',
                            action: function ( e, dt, node, config ) {
                                dt.columns().visible(true, false);
                            }
                        }
                    ]
    {% endif %}
                }
            ],
            pageLength: 366,
            lengthMenu: [ [10, 25, 50, 100, -1], [10, 25, 50, 100, "All"] ],
            columnDefs: [
                {
                    targets: [{% for item in range(format_start_column, number_of_columns) -%}{{ item }}{% if not loop.last %}, {% endif %}{%- endfor %}],
                    type: 'num', // Treat data in these columns as numbers for sorting
                    render: function (data, type, row) {
                        // For sorting, extract the raw number
                        if (type === 'sort' || type === 'type') {
                            // Extract number from the div, handle unavailable
                            var number = $(data).text();
                            return (number === 'unavailable' || number === '') ? Infinity : parseFloat(number); // Sort unavailable as largest
                        }
                        // For display, format with a dollar sign
                        if (type === 'display') {
                            var cellData = $(data).text();
                            if (cellData === 'unavailable' || cellData === '') {
                                return data; // Keep unavailable or empty as is, including the div
                            }
                            // Prepend dollar sign and keep the original div structure for styling
                            var originalDiv = $(data).clone();
                            originalDiv.text('$' + cellData);
                            return originalDiv.prop('outerHTML');
                        }
                        return data; // Default return
                    }
                }{%if by_hotel_html %},
                {
                targets: [{% for item in range(8, number_of_columns) -%}{{ item }}{% if not loop.last %}, {% endif %}{%- endfor %}],
                visible: false
                }{% endif %}
            ]
        });

    // Date range filter
    {%if by_hotel_html %}
    document.getElementById('min-date').value = '{{ tomorrow }}'; // Change this to your desired default date
    {% endif %}
    $.fn.dataTable.ext.search.push(
        function(settings, data, dataIndex) {
            var dateStr = $(settings.aoData[dataIndex].nTr).find('th').text();
            if (!dateStr) return true;
            var parts = dateStr.split('/');
            // Ensure the year is correctly parsed as 20xx
            var year = parseInt(parts[2], 10);
            if (year < 2000) { // Simple check if it's a two-digit year
                year += 2000;
            }
            var rowDate = new Date(
                year,
                parseInt(parts[0], 10) - 1, // Month is 0-indexed
                parseInt(parts[1], 10)
            );

            function parseInputDate(str) {
                if (!str) return null;
                var dateParts = str.split('-');
                return new Date(parseInt(dateParts[0], 10), parseInt(dateParts[1], 10) - 1, parseInt(dateParts[2], 10));
            }

            var min = $('#min-date').val();
            var max = $('#max-date').val();
            var minDate = parseInputDate(min);
            var maxDate = parseInputDate(max);

            rowDate.setHours(0,0,0,0);
            if (minDate) minDate.setHours(0,0,0,0);
            if (maxDate) maxDate.setHours(0,0,0,0);

            if ((!minDate || rowDate >= minDate) && (!maxDate || rowDate <= maxDate)) {
                return true;
            }
            return false;
        }
        );
        table.draw();
        $('#min-date, #max-date').on('change', function() {
            table.draw();
        });
    });
    </script>
    </body>
</html>
